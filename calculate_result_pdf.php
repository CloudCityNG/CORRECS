<?php
session_start();
require_once ("includes/initialize.php");

require_once("fpdf.php");
if(!is_logged_in() && !isset($_GET["studentId"]) && ($_GET["matric"])){
	Header("Location: list_students.php");
}
else{
	$db = DatabaseWrapper::getInstance();
	$student = $db->query("select * from student_info where id = '{$_GET["studentId"]}' and matricNo = '{$_GET["matric"]}';", "select");

	if($student){
		$this_student = Student::instantiate($student[0]);
		$current_session = $this_student->entryYear;
	}
}
$cummulative_tnu = 0;
$cummulative_tcp = 0;
		
		//connect to database
		//echo $session[0][0];
Class ThisPDF extends FPDF{
	private $PG_W = 190;
	public $db;
	public function __construct($passInYourDataHere = NULL) {
		parent::__construct();
		//$this->LineItems();
	}
	
 
	function FancyTable( $header, $data, $data1,$sem, $header_array) {
		/* Layout */
		$this->AddPage();
		//echo count($data1);
		
		$this->SetFont('Courier','',8);
		
		// Headers and widths
		$w = array(30, 10,20,80);
		$i = 0;
		foreach($data as $row){
			
			//echo count($data1);
			if($sem[$i] == 1){
				//var_dump($header_array);
				$this->setFont('Courier', 'B', 10);
				
				$this->Cell(0, 2, "Fountain University, Osogbo, Nigeria", 0, 0, 'L');
				$this->ln(3);
				$this->Cell(0, 2, $header_array[0], 0,0, 'L');
				$this->ln(3);
				$this->Cell(0, 2, "Student Status", 0, 0, 'L');
				$this->ln(3);
				$this->Cell(0, 2, "Matric. No: $header_array[1]");
				$this->ln(3);
				$this->Cell(0, 2, "Name: {$header_array[2]}  {$header_array[3]} LEVEL", 0, 0, 'L');
				$this->ln(3);
				$this->Cell(0, 2, $header_array[4], 0, 0, 'L');
				$this->Ln(3);
				$this->SetFont('Courier','',8);
			}
		 
			$this->Cell(190, 4, "Courses Taken in Semester {$sem[$i]}", 0,0,'C' );
			$this->ln();
			for($j = 0; $j < count($header); $j++) {
			//echo $w[$i];
				$this->Cell($w[$j], 7, $header[$j], 1, 0, 'C',false);
				
			}
		
		$this->Ln();
		
		$this->SetFont('Courier','',8);
		

		$fill=false;

		//$i = 0;


		$x0=$x = $this->GetX();
		$y = $this->GetY();
	//for($i=0;$i<count($row);$i++)
		foreach($row as $row1)
		{
	
			$yH=5; //height of the row
			$this->SetXY($x, $y);
			$this->Cell($w[0], $yH, "", '',0,'',$fill);
			$this->SetXY($x, $y);
			$this->MultiCell($w[0],5,$row1[0],0,'L');


			$this->SetXY($x + $w[0], $y);
			$this->Cell($w[1], $yH, "", '',0,'',$fill);
			$this->SetXY($x + $w[0], $y);
			$this->MultiCell($w[1],5,$row1[1],0,'L');


			$x =$x+$w[0];
			$this->SetXY($x + $w[1], $y);
			$this->Cell($w[2], $yH, "", '',0,'',$fill);
			$this->SetXY($x + $w[1], $y);
			$this->MultiCell($w[2],5,$row1[2],0,'L');

			$x =$x+$w[1];
			$this->SetXY($x + $w[2], $y);
			$this->Cell($w[3], $yH, "", '',0,'',$fill);
			$this->SetXY($x + $w[2], $y);
			$this->MultiCell($w[3],5,$row1[3],0,'L');


			$y=$y+$yH; //move to next row
			$x=$x0; //start from firt column
			//$fill=!$fill;
			

			//$i++;
		}
		//$i++;
		$this->ln(3);
			if($sem[$i] > 4 ){
				$j = $i + 1;
			 $this->Write(5, $data1[$j][0]);
			//echo $data1[$i][0];
			$this->ln();
			$this->Write(5, $data1[$j][1]);
		
			}
			else{
				$this->Write(5, $data1[$i][0]);
				//echo $data1[$i][0];
				$this->ln();
				$this->Write(5, $data1[$i][1]);
				
			}
			$this->ln(3);
			
			/* if($sem[$i] == $header_array[5]){
				$this->Cell(30, 4, "Computed/Generated by: ", 0, 0 , 'L');
				$this->Cell(30, 4, "Computed/Generated by: ", 0, 0 , 'R');
				//$this->
			} */
		
		
		
		$i++;
	}
	//;
	
	}
	
	function printEnd(){
		//$this->Cell
		$this->ln(3);
		$this->Cell(0, 4, "Computed/Generated by: ", 0, 0 , 'L');
		$this->Cell(0, 4, "Chief Examiner/Head of Department: ", 0, 0 , 'R');
		$this->ln(5);
		$this->Cell(0, 4, "______________ ", 0, 0 , 'L');
		$this->Cell(0, 4, "______________ ", 0, 0 , 'R');
		
	}

}	
		
		// start and build the PDF document
		
		
		
		//$pdf = new PDF('L','mm','A4');
		//Column titles
		
		$db = DatabaseWrapper::getInstance();
		$this_lecturer = initLecturer();
		$level = $db->query("select * from level_advisers where lecturerId = '{$this_lecturer->id}';", "select");
			
		if(!empty($level)){
		
			$list_students = $db->query("select * from student_info where entryYear = '{$level[0]["entryYear"]}' and programmeId = '{$level[0]["programmeId"]}';", "select");
			$de_entry = $level[0]["entryYear"] + 1;
			$list_students2 = $db->query("select * from student_info where entryYear = '{$de_entry}' and programmeId = '{$level[0]["programmeId"]}' and (modeOfEntry = 'DFP' or modeOfEntry = 'DE');", "select");
			$student_list = array_merge($list_students, $list_students2);
		}
		$first_class_list = array();
		$second_upper_list = array();
		$second_lower_list = array();
		$third_class_list = array();
		$pass_list = array();
			
		//$upper_session = $session[0][0] + 1;
			
		
			
		
		$data = array();
		$data1 = array();
		$ze_timer = 0;
for($current_semester = 1; $current_semester <= $this_student->currentSemester; $current_semester++){
		$courses = array();
		$semester_tnu = 0;
		$semester_tcp = 0;
		if($current_semester ==1 || $current_semester % 2 != 0){
			$course_list = $db->query("select * from coursestaken where studentId = '{$this_student->id}' and session = '{$current_session}' and semester = 1 ;", "select");
		}
		else{
			$course_list = $db->query("select * from coursestaken where studentId = '{$this_student->id}' and session = '{$current_session}' and semester = 2 ;", "select");
			$current_session = $current_session + 1;
		}
		if(!empty($course_list)){
		for($i=0;$i<count($course_list); $i++){
			
			$course_info = $db->query("select * from courses where code = '{$course_list[$i]["courseCode"]}';", "select");
			
			$courses[$i] = $course_info[0];
	
			$semester_tnu = $semester_tnu + $courses[$i]["units"];
			
		}
		}
		else{
			//echo "<h4> There are no records for semester {$current_semester} <br />";
			continue;
		}
	
	
	//var_dump($courses);
	for($i = 0; $i < count($courses); $i++){
		$grade_credit_point;
		switch($course_list[$i]["grade"]){
			case "A":
				$grade_credit_point = 5 * $courses[$i]["units"];
				break;
			case "B":
				$grade_credit_point = 4 * $courses[$i]["units"];
				break;
			case "C":
				$grade_credit_point = 3 * $courses[$i]["units"];
				break;
			case "D":
				$grade_credit_point = 2 * $courses[$i]["units"];
				break;
			case "E";
				$grade_credit_point = 1 * $courses[$i]["units"];
				break;
			case "F";
				$grade_credit_point = 0 * $courses[$i]["units"];	
				break;
			default:
				$grade_credit_point = 0 * $courses[$i]["units"];
				break;
		}
		
		$semester_tcp = $semester_tcp + $grade_credit_point;
		
	}
			
	for($i=0;$i<count($courses);$i++){
			
			$data[$ze_timer][] = array($courses[$i]["code"], $courses[$i]["units"],$course_list[$i]["finalScore"], $courses[$i]["name"] );
		}
		
		//echo "</table>";
		$cummulative_tcp = $cummulative_tcp + $semester_tcp;
		$cummulative_tnu = $cummulative_tnu + $semester_tnu;
	if(($semester_tnu != 0) || ($cummulative_tnu != 0) ){
	$semester_gpa = $semester_tcp / $semester_tnu;
	$cummulative_gpa = $cummulative_tcp/$cummulative_tnu;
	
									
	$shortened_gpa = sprintf("%.2f", $semester_gpa);
	$shortened_tnu = sprintf("%.2f", $semester_tnu);
	$shortened_tcp = sprintf("%.2f", $semester_tcp);
		
		$shortened_cumm_gpa = sprintf("%.2f", $cummulative_gpa);
		$shortened_cumm_tnu = sprintf("%.2f", $cummulative_tnu);
		$shortened_cumm_tcp = sprintf("%.2f", $cummulative_tcp);
		
		$data1[$ze_timer][] = "Present:   TCP: {$shortened_tcp}, TNU: {$shortened_tnu}, GPA: {$shortened_gpa}";
		$data1[$ze_timer][] = "Cummulative:   TCP: {$shortened_cumm_tcp}, TNU: {$shortened_cumm_tnu}, GPA: {$shortened_cumm_gpa}";
		
	}
	
	$ze_timer++;
}

		
		$header = array( "Course Code",  "Units","Final Score","Course Title");

		$pdf = new ThisPDF();
		$j = 0;
		$i = 1;
		//$x = 1;
		$sem = array();
		//var_dump($data1);
		$full_name = $this_student->lname . ", ".$this_student->fname . " ". $this_student->onames;
		
		$department = $db->query("select deptName from departments where deptId = {$this_student->deptId};", "select");
		$summary_result = "CTCP: {$shortened_cumm_tcp}  CTNU = {$shortened_cumm_tnu}  CGPA: {$shortened_cumm_gpa}";
		$header_array = array($department[0]["deptName"], $this_student->matricNo, $full_name,$this_student->level, $summary_result, $this_student->currentSemester);
		//echo $full_name;
	while((list($row,$rr) = each($data)) && (list($row1,$rr1) = each($data1))){
			
			$pagedata[$j] = $rr;
			$pagedata1[$j] = $rr1;
			$sem[] = $i;
			
			if(($i%4)== 0 ||($i == count($data))){
				
				if($i > 4  && $i <= 8){
					for($p=1;$p<= 4;$p++)
						array_shift($sem);
				}
				if($i > 8){
					for($p=1;$p <= 8;$p++ ){
						array_shift($sem);
					}
				}
				//var_dump($pagedata1[$sem]);
				$pdf->FancyTable( $header, $pagedata, $pagedata1,$sem, $header_array, $this_student->currentSemester);
				if($i == count($data)){
					$pdf->printEnd();
				}
				$j=0;
				$pagedata="";
				$pagedata1 = "";
			}
			$i++;
			$j++;
			//$x++;
			
		}
				
			
		$pdf->Output();
		ob_start();
		ob_end_flush();
		?>

